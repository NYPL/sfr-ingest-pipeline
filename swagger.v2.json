{
  "swagger": "2.0",
  "info": {
    "version": "v0.2.3",
    "title": "ResearchNow Search API",
    "description": "REST API for Elasticsearch index for the ResearchNow Project"
  },
  "host": "platform.nypl.org",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "tags": [
    {
      "name": "research-now",
      "description": "ResearchNow Search API"
    }
  ],
  "paths": {
    "/v0.1/research-now/work": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "Single Work return of item in the SFR collection",
        "description": "Accepts a single record identifier and returns a single work record",
        "parameters": [
          {
            "name": "recordID",
            "in": "query",
            "description": "Identifier to lookup, either UUID, or other identifier (oclc, isbn, etc)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was received in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "522": {
            "description": "An ElasticSearch error, commonly none or too many responses received",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v0.1/research-now/works": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "Simple Search FRBRized holdings of Project Gutenberg, HathiTrust and Open Access Library",
        "description": "Basic Elasticsearch queries can be sent against all fields and indexes",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Keyword terms to match in all fields and indexes",
            "required": true,
            "type": "string"
          },{
            "name": "per_page",
            "in": "query",
            "description": "Results to return per page. Defaults to 10",
            "required": false,
            "type": "integer"
          },{
            "name": "page",
            "in": "query",
            "description": "The page of results to return. By default the results will be sorted by the ElasticSearch sorting algorithm",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "research-now"
        ],
        "summary": "Advanced Search for ResearchNow holdings",
        "description": "Full ElasticSearch DSL queries (using bodybuilder) for full text or single field queries. This endpoint also enables, filtering and sorting results",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ElasticSearch DSL block containing a ResearchNow query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MainQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was received in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v0.1/research-now/v2/work": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "(v2) GET Single work",
        "description": "Accepts a single work identifier, passed through a GET request and retrieves a single work record. Will raise an error if no or more than one record is returned for the provided identifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "description": "Identifier to lookup, either UUID, or other identifier (oclc, isbn, etc)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "522": {
            "description": "An ElasticSearch error, commonly none or too many responses recieved",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "research-now"
        ],
        "summary": "(v2) POST Single Work",
        "description": "Accepts a single work identifier in a POST request and retrieves a single work record. Will raise an error if no or more than one record is returned for the provided identifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "body",
            "description": "Identifier to lookup, either UUID, or other identifier (oclc, isbn, etc)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "522": {
            "description": "An ElasticSearch error, commonly none or too many responses recieved",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v0.1/research-now/v2/search-api": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "(v2) GET Simple Search Endpoint",
        "description": "Makes basic search queries against ElasticSearch index of Project Gutenberg, HathiTrust and Directory of Open Access Books data",
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "description": "Field to query. Currently supports: Keyword, Title, Author and Subject. Defaults to Keyword",
            "required": true,
            "type": "string",
            "enum": ["keyword", "title", "author", "subject", "viaf", "lcnaf"]
          },{
            "name": "query",
            "in": "query",
            "description": "Query term to search. This is a free-text field and which understands standard boolean search terms as well as quoted strings for exact matching.",
            "required": true,
            "type": "string"
          },{
            "name": "per_page",
            "in": "query",
            "description": "Results to return per page.",
            "required": false,
            "type": "integer",
            "default": 10
          },{
            "name": "page",
            "in": "query",
            "description": "The page of results to return. By default the results will be sorted by the ElasticSearch sorting algorithm.",
            "required": false,
            "type": "integer"
          },{
            "name": "prev_page_sort",
            "in": "query",
            "description": "The first `sort` parameter from the current result set. If provided will retrieve the results from the previous page.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },{
            "name": "next_page_sort",
            "in": "query",
            "description": "The last `sort` parameter from the current result set. If provided will retrieve the next page of results.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },{
            "name": "total",
            "in": "query",
            "description": "The total number of results for the current result set. Used to retrieve arbitrary results pages. This is optional but increases the speed of query responses",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "research-now"
        ],
        "summary": "(v2) POST Simple Search Endpoint",
        "description": "Will construct basic ElasticSearch DSL queries against the SFR index. Supports basic search endpoints",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ElasticSearch DSL block containing a ResearchNow query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2MainQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Elasticsearch JSON object",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v0.1/research-now/viaf-lookup": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "Looks up agent names in the OCLC VIAF API",
        "description": "Queries the OCLC VIAF API for agent records, including a controlled version of the agent's name along with VIAF and LCNAF IDs. These responses are cached in a Redis cluster for faster responses to known agents.",
        "parameters": [
          {
            "name": "queryName",
            "in": "query",
            "description": "Name of agent to query in VIAF API. Can be an individual or organization.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing a response in the body parameter, in a serialized JSON string.",
            "schema": {
              "$ref": "#/definitions/VIAFResultResponse"
            }
          },
          "404": {
            "description": "A message stating that a matching VIAF record could not be found.",
            "schema": {
              "$ref": "#/definitions/VIAFResultResponse"
            }
          },
          "500": {
            "description": "Indicates that an error was encountered in VIAF API, Redis cluster, or other upstream service.",
            "schema": {
              "$ref": "#/definitions/VIAFResultResponse"
            }
          },
          "502": {
            "description": "An internal server error, either in the Lambda function or the API Gateway integration",
            "schema": {
              "$ref": "#/definitions/VIAFResultResponse"
            }
          },
          "504": {
            "description": "A malformed response was received from the Lambda function.",
            "schema": {
              "$ref": "#/definitions/VIAFResultResponse"
            }
          }
        }
      }
    },
    "/v0.1/research-now/v2/utils/languages": {
      "get": {
        "tags": [
          "research-now"
        ],
        "summary": "(v2) GET Distinct Language Lookup",
        "description": "Returns an array of unique languages in the ResearchNow database",
        "parameters": [
          {
            "name": "total",
            "in": "query",
            "description": "Toggle, if true will return total number of works associated with each language",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the languages array",
            "schema": {
              "$ref": "#/definitions/LanguageResponse"
            }
          },
          "404": {
            "description": "Resource was not found error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "An Invalid Parameter was recieved in the Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VIAFResultResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "header": {
          "$ref": "#/definitions/VIAFHeader"
        },
        "body": {
          "type": "string"
        },
        "isBase64Encoded": {
          "type": "boolean"
        }
      }
    },
    "VIAFHeader": {
      "type": "object",
      "properties": {
        "req-time": {
          "type": "number"
        }
      }
    },
    "ResultResponse": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "enum": [
            "searchResult"
          ]
        },
        "result": {
          "$ref": "#/definitions/Result"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "object",
          "items": {
            "type": "string"
          },
          "description": "An Elasticsearch JSON object"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "SingleQuery": {
      "title": "SingleQuery",
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "example": "000000-0000-0000-0000-00000000000",
          "description": "Most frequently an UUID, can also be an OCLC, LCCN, ISBN or other identifier."
        }
      }
    },
    "v2MainQuery": {
      "title": "MainQuery (v2)",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field to query. Currently supports: Keyword, Title, Author and Subject. Defaults to Keyword",
          "type": "string",
          "example": "keyword",
          "enum": ["keyword", "title", "author", "subject", "viaf", "lcnaf"]
        },
        "query": {
          "description": "Query term to search. This is a free-text field and which understands standard boolean search terms as well as quoted strings for exact matching.",
          "example": "\"Civil War\" OR Lincoln",
          "type": "string"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2QueryBlock"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBlock"
          }
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortBlock"
          }
        },
        "per_page": {
          "description": "Results to return per page. Defaults to 10",
          "example": 10,
          "type": "integer"
        },
        "page": {
          "description": "The page of results to return. By default the results will be sorted by the ElasticSearch sorting algorithm",
          "example": 0,
          "type": "integer"
        },
        "prev_page_sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "next_page_sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total":{
          "description": "The total number of results for the current result set. Used to retrieve arbitrary results pages. This is optional but increases the speed of query responses",
          "example": 1000,
          "type": "integer"
        }
      }
    },
    "MainQuery": {
      "title": "MainQuery",
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryBlock"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBlock"
          }
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortBlock"
          }
        },
        "per_page": {
          "description": "Results to return per page. Defaults to 10",
          "example": 10,
          "type": "integer"
        },
        "page": {
          "description": "The page of results to return. By default the results will be sorted by the ElasticSearch sorting algorithm",
          "example": 0,
          "type": "integer"
        }
      }
    },
    "SortBlock": {
      "title": "Sort",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "example": "title",
          "description": "An ElasticSearch field to sort results by",
          "enum": ["title", "author", "date"]
        },
        "dir": {
          "type": "string",
          "example": "asc",
          "enum": ["asc", "desc"],
          "description": "The direction in which to sort results"
        }
      }
    },
    "FilterBlock": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": ["language", "years", "show_all", "format"],
          "description": "Field on which to match results by (effectively exact-match search)"
        },
        "value": {
          "type": "object",
          "$ref": "#/definitions/FilterObject",
          "description": "Value on which to filter. Can be a string (for term filters such as language or format), a boolean value (for show_all), or an object such as {start: 1900, end: 2000} for years"
        }
      },
      "example": [
        {
          "field": "language",
          "value": "Spanish"
        },{
          "field": "years",
          "value": {"start": 1800, "end": 2000}
        }
    ]
    },
    "QueryBlock": {
      "title": "Query",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "example": "title",
          "description": "Field to query"
        },
        "value": {
          "type": "string",
          "example": "divina",
          "description": "Query value"
        }
      }
    },
    "FilterObject": {},
    "LanguageResponse": {
      "title": "Language Utility Response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "200",
          "description": "API status code"
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/LanguageData",
          "description": "Data block for the language utility"
        }
      }
    },
    "LanguageData": {
      "title": "Language Data Block",
      "type": "object",
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageObject"
          }
        }
      }
    },
    "LanguageObject": {
      "title": "Language Object",
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "example": "Spanish",
          "description": "Full text string of the language"
        },
        "count": {
          "type": "integer",
          "example": "10",
          "description": "Count of the number of works associated with this language"
        }
      }
    },
    "v2QueryBlock": {
      "title": "v2 Query",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "example": "keyword",
          "description": "Field to query",
          "enum": ["keyword", "title", "author", "subject", "viaf", "lcnaf"]
        },
        "query": {
          "type": "string",
          "example": "\"Civil War\" OR Lincoln",
          "description": "Text of the query. Can contain standard boolean search syntax"
        }
      }
    }
  }
}
